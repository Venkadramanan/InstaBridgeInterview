@using OrchardCore.ContentManagement
@using OrchardCore.Contents
@inject IAuthorizationService AuthorizationService
@{
    ContentItem contentItem = Model.ContentItem;
}

<div class="row">
    <div class="col-xl-9 col-sm-12 title">
        <div class="form-check float-start">
            <input type="checkbox" class="form-check-input" value="@contentItem.Id" name="itemIds" id="itemIds-@contentItem.Id">
            <label class="form-check-label" for="itemIds-@contentItem.Id"></label>
        </div>
        @if (await AuthorizationService.AuthorizeAsync(User, CommonPermissions.EditContent, contentItem))
        {
            <a admin-for="@contentItem" asp-route-returnUrl="@FullRequestPath" />
        }
        else
        {
            @contentItem
        }
        - <small class="text-muted">@contentItem.ContentType</small>
        @if (Model.Header != null)
        {
            <div class="header">@await DisplayAsync(Model.Header)</div>
        }
        @if (Model.Tags != null)
        {
            @await DisplayAsync(Model.Tags)
        }
        @if (Model.Meta != null)
        {
        <div class="d-inline">@await DisplayAsync(Model.Meta)</div>
        }
    </div>
    <div class="col-xl-3 col-sm-12">
        <div class="float-end button-group">
            @if (Model.Actions != null)
            {
                @await DisplayAsync(Model.Actions)
            }
            @if (Model.ActionsMenu != null)
            {
                <div class="btn-group">
                    <button type="button" class="btn btn-sm text-secondary" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @T["Actions"]
                    </button>
                    <div class="actions-menu dropdown-menu dropdown-menu-end">
                        @await DisplayAsync(Model.ActionsMenu)
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@if (Model.Content != null)
{
    <div class="primary">@await DisplayAsync(Model.Content)</div>
}
