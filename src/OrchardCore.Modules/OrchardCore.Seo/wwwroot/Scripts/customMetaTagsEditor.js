/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

function initializeCustomMetaTagsEditor(elem, data, modalBodyElement) {
  var store = {
    debug: false,
    state: {
      metaTags: data
    },
    addMetaTag: function addMetaTag() {
      this.state.metaTags.push({
        content: '',
        name: '',
        property: '',
        charset: '',
        httpEquiv: ''
      });
    },
    removeMetaTag: function removeMetaTag(index) {
      this.state.metaTags.splice(index, 1);
    },
    getMetaTagsFormattedList: function getMetaTagsFormattedList() {
      return JSON.stringify(this.state.metaTags);
    }
  };
  var metaTagsTable = {
    template: '#meta-tags-table',
    props: ['data'],
    name: 'meta-tags-table',
    methods: {
      add: function add() {
        store.addMetaTag();
      },
      remove: function remove(index) {
        store.removeMetaTag(index);
      },
      getMetaTagsFormattedList: function getMetaTagsFormattedList() {
        return store.getMetaTagsFormattedList();
      }
    }
  };
  var metaTagsModal = {
    template: '#meta-tags-modal',
    props: ['data'],
    name: 'meta-tags-modal',
    methods: {
      getMetaTagsFormattedList: function getMetaTagsFormattedList() {
        return store.getMetaTagsFormattedList();
      },
      showModal: function showModal() {
        metaTagsModal.props.data.modal = new bootstrap.Modal(modalBodyElement[0]);
        metaTagsModal.props.data.modal.show();
      },
      closeModal: function closeModal() {
        metaTagsModal.props.data.modal.hide();
      }
    }
  };
  new Vue({
    components: {
      metaTagsTable: metaTagsTable,
      metaTagsModal: metaTagsModal
    },
    data: {
      sharedState: store.state,
      modal: null
    },
    el: elem,
    methods: {
      showModal: function showModal() {
        metaTagsModal.methods.showModal();
      }
    }
  });
}