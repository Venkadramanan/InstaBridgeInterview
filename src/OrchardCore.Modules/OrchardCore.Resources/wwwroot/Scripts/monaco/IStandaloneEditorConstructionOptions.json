{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "ApplicationCache": {
            "properties": {
                "CHECKING": {
                    "type": "number"
                },
                "DOWNLOADING": {
                    "type": "number"
                },
                "IDLE": {
                    "type": "number"
                },
                "OBSOLETE": {
                    "type": "number"
                },
                "UNCACHED": {
                    "type": "number"
                },
                "UPDATEREADY": {
                    "type": "number"
                },
                "oncached": {
                    "type": "object"
                },
                "onchecking": {
                    "type": "object"
                },
                "ondownloading": {
                    "type": "object"
                },
                "onerror": {
                    "type": "object"
                },
                "onnoupdate": {
                    "type": "object"
                },
                "onobsolete": {
                    "type": "object"
                },
                "onprogress": {
                    "type": "object"
                },
                "onupdateready": {
                    "type": "object"
                },
                "status": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Attr": {
            "description": "A DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "localName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespaceURI": {
                    "type": "string"
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "ownerElement": {
                    "$ref": "#/definitions/Element"
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "type": "string"
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "specified": {
                    "type": "boolean"
                },
                "textContent": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BarProp": {
            "properties": {
                "visible": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CSSRule": {
            "description": "A single CSS rule. There are several types of rules, listed in the Type constants section below.",
            "properties": {
                "CHARSET_RULE": {
                    "type": "number"
                },
                "FONT_FACE_RULE": {
                    "type": "number"
                },
                "IMPORT_RULE": {
                    "type": "number"
                },
                "KEYFRAMES_RULE": {
                    "type": "number"
                },
                "KEYFRAME_RULE": {
                    "type": "number"
                },
                "MEDIA_RULE": {
                    "type": "number"
                },
                "NAMESPACE_RULE": {
                    "type": "number"
                },
                "PAGE_RULE": {
                    "type": "number"
                },
                "STYLE_RULE": {
                    "type": "number"
                },
                "SUPPORTS_RULE": {
                    "type": "number"
                },
                "cssText": {
                    "type": "string"
                },
                "parentRule": {
                    "$ref": "#/definitions/CSSRule"
                },
                "parentStyleSheet": {
                    "$ref": "#/definitions/CSSStyleSheet"
                },
                "type": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "CSSStyleSheet": {
            "description": "A single CSS style sheet. It inherits properties and methods from its parent, StyleSheet.",
            "properties": {
                "cssRules": {
                    "additionalProperties": false,
                    "description": "A CSSRuleList is an (indirect-modify only) array-like object containing an ordered collection of CSSRule objects.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/CSSRule"
                        }
                    },
                    "type": "object"
                },
                "disabled": {
                    "type": "boolean"
                },
                "href": {
                    "type": "string"
                },
                "media": {
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "ownerNode": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Element"
                        },
                        {
                            "$ref": "#/definitions/ProcessingInstruction"
                        }
                    ]
                },
                "ownerRule": {
                    "$ref": "#/definitions/CSSRule"
                },
                "parentStyleSheet": {
                    "$ref": "#/definitions/CSSStyleSheet"
                },
                "rules": {
                    "additionalProperties": false,
                    "description": "A CSSRuleList is an (indirect-modify only) array-like object containing an ordered collection of CSSRule objects.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/CSSRule"
                        }
                    },
                    "type": "object"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CacheStorage": {
            "description": "The storage for Cache objects.",
            "type": "object"
        },
        "ChildNode": {
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "namespaceURI": {
                    "type": "string"
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "textContent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Clipboard": {
            "type": "object"
        },
        "CredentialsContainer": {
            "type": "object"
        },
        "Crypto": {
            "description": "Basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives.",
            "properties": {
                "subtle": {
                    "$ref": "#/definitions/SubtleCrypto"
                }
            },
            "type": "object"
        },
        "CustomElementRegistry": {
            "type": "object"
        },
        "DOMImplementation": {
            "description": "An object providing methods which are not dependent on any particular document. Such an object is returned by the Document.implementation property.",
            "type": "object"
        },
        "DOMPoint": {
            "properties": {
                "w": {
                    "type": "number"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                },
                "z": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DOMRect": {
            "properties": {
                "bottom": {
                    "type": "number"
                },
                "height": {
                    "type": "number"
                },
                "left": {
                    "type": "number"
                },
                "right": {
                    "type": "number"
                },
                "top": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DOMRectReadOnly": {
            "properties": {
                "bottom": {
                    "type": "number"
                },
                "height": {
                    "type": "number"
                },
                "left": {
                    "type": "number"
                },
                "right": {
                    "type": "number"
                },
                "top": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DOMStringMap": {
            "additionalProperties": {
                "type": "string"
            },
            "description": "Used by the dataset HTML attribute to represent data for custom attributes added to elements.",
            "type": "object"
        },
        "Document": {
            "description": "Any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "URL": {
                    "description": "Sets or gets the URL for the current document.",
                    "type": "string"
                },
                "activeElement": {
                    "$ref": "#/definitions/Element"
                },
                "alinkColor": {
                    "type": "string"
                },
                "all": {
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "anchors": {
                    "items": {
                        "$ref": "#/definitions/HTMLAnchorElement"
                    },
                    "type": "array"
                },
                "applets": {
                    "items": {
                        "$ref": "#/definitions/HTMLAppletElement"
                    },
                    "type": "array"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "bgColor": {
                    "type": "string"
                },
                "body": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Specifies the beginning and end of the document body."
                },
                "characterSet": {
                    "description": "Returns document's encoding.",
                    "type": "string"
                },
                "charset": {
                    "description": "Gets or sets the character set used to encode the object.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "compatMode": {
                    "description": "Gets a value that indicates whether standards-compliant mode is switched on for the object.",
                    "type": "string"
                },
                "contentType": {
                    "description": "Returns document's content type.",
                    "type": "string"
                },
                "cookie": {
                    "description": "Returns the HTTP cookies that apply to the Document. If there are no cookies or cookies can't be applied to this resource, the empty string will be returned.\n\nCan be set, to add a new cookie to the element's set of HTTP cookies.\n\nIf the contents are sandboxed into a unique origin (e.g. in an iframe with the sandbox attribute), a \"SecurityError\" DOMException will be thrown on getting and setting.",
                    "type": "string"
                },
                "currentScript": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/HTMLScriptElement"
                        },
                        {
                            "$ref": "#/definitions/SVGScriptElement"
                        }
                    ],
                    "description": "Returns the script element, or the SVG script element, that is currently executing, as long as the element represents a classic script. In the case of reentrant script execution, returns the one that most recently started executing amongst those that have not yet finished executing.\n\nReturns null if the Document is not currently executing a script or SVG script element (e.g., because the running script is an event handler, or a timeout), or if the currently executing script or SVG script element represents a module script."
                },
                "defaultView": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Window"
                        },
                        {
                            "type": "object"
                        }
                    ]
                },
                "designMode": {
                    "description": "Sets or gets a value that indicates whether the document can be edited.",
                    "type": "string"
                },
                "dir": {
                    "description": "Sets or retrieves a value that indicates the reading order of the object.",
                    "type": "string"
                },
                "doctype": {
                    "$ref": "#/definitions/DocumentType",
                    "description": "Gets an object representing the document type declaration associated with the current document."
                },
                "documentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Gets a reference to the root node of the document."
                },
                "documentURI": {
                    "description": "Returns document's URL.",
                    "type": "string"
                },
                "domain": {
                    "description": "Sets or gets the security domain of the document.",
                    "type": "string"
                },
                "embeds": {
                    "description": "Retrieves a collection of all embed objects in the document.",
                    "items": {
                        "$ref": "#/definitions/HTMLEmbedElement"
                    },
                    "type": "array"
                },
                "fgColor": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "forms": {
                    "description": "Retrieves a collection, in source order, of all form objects in the document.",
                    "items": {
                        "additionalProperties": false,
                        "description": "A <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.",
                        "patternProperties": {
                            "^[0-9]+$": {
                                "$ref": "#/definitions/Element"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "fullscreen": {
                    "type": "boolean"
                },
                "fullscreenElement": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns document's fullscreen element."
                },
                "fullscreenEnabled": {
                    "description": "Returns true if document has the ability to display elements fullscreen and fullscreen is supported, or false otherwise.",
                    "type": "boolean"
                },
                "head": {
                    "$ref": "#/definitions/HTMLHeadElement",
                    "description": "Returns the head element."
                },
                "hidden": {
                    "type": "boolean"
                },
                "images": {
                    "description": "Retrieves a collection, in source order, of img objects in the document.",
                    "items": {
                        "$ref": "#/definitions/HTMLImageElement"
                    },
                    "type": "array"
                },
                "implementation": {
                    "$ref": "#/definitions/DOMImplementation",
                    "description": "Gets the implementation object of the current document."
                },
                "inputEncoding": {
                    "description": "Returns the character encoding used to create the webpage that is loaded into the document object.",
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "lastModified": {
                    "description": "Gets the date that the page was last modified, if the page supplies one.",
                    "type": "string"
                },
                "linkColor": {
                    "type": "string"
                },
                "links": {
                    "description": "Retrieves a collection of all a objects that specify the href property and all area objects in the document.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/HTMLAnchorElement"
                            },
                            {
                                "$ref": "#/definitions/HTMLAreaElement"
                            }
                        ]
                    },
                    "type": "array"
                },
                "location": {
                    "$ref": "#/definitions/Location",
                    "description": "Contains information about the current URL."
                },
                "namespaceURI": {
                    "type": "string"
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointerlockchange": {
                    "type": "object"
                },
                "onpointerlockerror": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreadystatechange": {
                    "description": "Fires when the state of the object has changed.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvisibilitychange": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "ownerDocument": {
                    "description": "Returns the node document. Returns null for documents.",
                    "type": "null"
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "plugins": {
                    "description": "Return an HTMLCollection of the embed elements in the Document.",
                    "items": {
                        "$ref": "#/definitions/HTMLEmbedElement"
                    },
                    "type": "array"
                },
                "pointerLockElement": {
                    "$ref": "#/definitions/Element"
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "readyState": {
                    "$ref": "#/definitions/DocumentReadyState",
                    "description": "Retrieves a value that indicates the current state of the object."
                },
                "referrer": {
                    "description": "Gets the URL of the location that referred the user to the current page.",
                    "type": "string"
                },
                "scripts": {
                    "description": "Retrieves a collection of all script objects in the document.",
                    "items": {
                        "$ref": "#/definitions/HTMLScriptElement"
                    },
                    "type": "array"
                },
                "scrollingElement": {
                    "$ref": "#/definitions/Element"
                },
                "styleSheets": {
                    "additionalProperties": false,
                    "description": "Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/CSSStyleSheet"
                        }
                    },
                    "type": "object"
                },
                "textContent": {
                    "type": "string"
                },
                "timeline": {
                    "$ref": "#/definitions/DocumentTimeline"
                },
                "title": {
                    "description": "Contains the title of the document.",
                    "type": "string"
                },
                "visibilityState": {
                    "$ref": "#/definitions/VisibilityState"
                },
                "vlinkColor": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DocumentReadyState": {
            "enum": [
                "complete",
                "interactive",
                "loading"
            ],
            "type": "string"
        },
        "DocumentTimeline": {
            "properties": {
                "currentTime": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DocumentType": {
            "description": "A Node containing a doctype.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "name": {
                    "type": "string"
                },
                "namespaceURI": {
                    "type": "string"
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "publicId": {
                    "type": "string"
                },
                "systemId": {
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Element": {
            "description": "Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Event": {
            "description": "An event which takes place in the DOM.",
            "properties": {
                "AT_TARGET": {
                    "type": "number"
                },
                "BUBBLING_PHASE": {
                    "type": "number"
                },
                "CAPTURING_PHASE": {
                    "type": "number"
                },
                "NONE": {
                    "type": "number"
                },
                "bubbles": {
                    "description": "Returns true or false depending on how event was initialized. True if event goes through its target's ancestors in reverse tree order, and false otherwise.",
                    "type": "boolean"
                },
                "cancelBubble": {
                    "type": "boolean"
                },
                "cancelable": {
                    "description": "Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method.",
                    "type": "boolean"
                },
                "composed": {
                    "description": "Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise.",
                    "type": "boolean"
                },
                "currentTarget": {
                    "$ref": "#/definitions/EventTarget",
                    "description": "Returns the object whose event listener's callback is currently being invoked."
                },
                "defaultPrevented": {
                    "description": "Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise.",
                    "type": "boolean"
                },
                "eventPhase": {
                    "description": "Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE.",
                    "type": "number"
                },
                "isTrusted": {
                    "description": "Returns true if event was dispatched by the user agent, and false otherwise.",
                    "type": "boolean"
                },
                "returnValue": {
                    "type": "boolean"
                },
                "srcElement": {
                    "$ref": "#/definitions/EventTarget"
                },
                "target": {
                    "$ref": "#/definitions/EventTarget",
                    "description": "Returns the object to which event is dispatched (its target)."
                },
                "timeStamp": {
                    "description": "Returns the event's timestamp as the number of milliseconds measured relative to the time origin.",
                    "type": "number"
                },
                "type": {
                    "description": "Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventTarget": {
            "description": "EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.",
            "type": "object"
        },
        "ExtensionScriptApis": {
            "type": "object"
        },
        "External": {
            "type": "object"
        },
        "Geolocation": {
            "description": "An object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user's location.",
            "type": "object"
        },
        "HTMLAnchorElement": {
            "description": "Hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "charset": {
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "contentEditable": {
                    "type": "string"
                },
                "coords": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "dir": {
                    "type": "string"
                },
                "download": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "hash": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "host": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "hreflang": {
                    "description": "Sets or retrieves the language code of the object.",
                    "type": "string"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "origin": {
                    "type": "string"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "password": {
                    "type": "string"
                },
                "pathname": {
                    "type": "string"
                },
                "ping": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "protocol": {
                    "type": "string"
                },
                "referrerPolicy": {
                    "type": "string"
                },
                "rel": {
                    "description": "Sets or retrieves the relationship between the object and the destination of the link.",
                    "type": "string"
                },
                "relList": {
                    "additionalProperties": false,
                    "description": "A set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "rev": {
                    "type": "string"
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "search": {
                    "type": "string"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "shape": {
                    "type": "string"
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "target": {
                    "description": "Sets or retrieves the window or frame at which to target content.",
                    "type": "string"
                },
                "text": {
                    "description": "Retrieves or sets the text of the object as a string.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HTMLAppletElement": {
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "align": {
                    "type": "string"
                },
                "alt": {
                    "type": "string"
                },
                "archive": {
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "code": {
                    "type": "string"
                },
                "codeBase": {
                    "type": "string"
                },
                "contentEditable": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "dir": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "form": {
                    "additionalProperties": false,
                    "description": "A <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "height": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "hspace": {
                    "type": "number"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                },
                "vspace": {
                    "type": "number"
                },
                "width": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HTMLAreaElement": {
            "description": "Provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <area> elements.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "alt": {
                    "description": "Sets or retrieves a text alternative to the graphic.",
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "contentEditable": {
                    "type": "string"
                },
                "coords": {
                    "description": "Sets or retrieves the coordinates of the object.",
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "dir": {
                    "type": "string"
                },
                "download": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "hash": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "host": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "noHref": {
                    "type": "boolean"
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "origin": {
                    "type": "string"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "password": {
                    "type": "string"
                },
                "pathname": {
                    "type": "string"
                },
                "ping": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "protocol": {
                    "type": "string"
                },
                "referrerPolicy": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                },
                "relList": {
                    "additionalProperties": false,
                    "description": "A set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "search": {
                    "type": "string"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "shape": {
                    "description": "Sets or retrieves the shape of the object.",
                    "type": "string"
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "target": {
                    "description": "Sets or retrieves the window or frame at which to target content.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HTMLElement": {
            "description": "Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "contentEditable": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "dir": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "HTMLEmbedElement": {
            "description": "Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <embed> elements.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "align": {
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "contentEditable": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "dir": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "height": {
                    "description": "Sets or retrieves the height of the object.",
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "src": {
                    "description": "Sets or retrieves a URL to be loaded by the object.",
                    "type": "string"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "width": {
                    "description": "Sets or retrieves the width of the object.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HTMLHeadElement": {
            "description": "Contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "contentEditable": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "dir": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "HTMLImageElement": {
            "description": "Provides special properties and methods for manipulating <img> elements.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "align": {
                    "type": "string"
                },
                "alt": {
                    "description": "Sets or retrieves a text alternative to the graphic.",
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "border": {
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "complete": {
                    "description": "Retrieves whether the object is fully loaded.",
                    "type": "boolean"
                },
                "contentEditable": {
                    "type": "string"
                },
                "crossOrigin": {
                    "type": "string"
                },
                "currentSrc": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "decoding": {
                    "enum": [
                        "async",
                        "auto",
                        "sync"
                    ],
                    "type": "string"
                },
                "dir": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "height": {
                    "description": "Sets or retrieves the height of the object.",
                    "type": "number"
                },
                "hidden": {
                    "type": "boolean"
                },
                "hspace": {
                    "type": "number"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "isMap": {
                    "description": "Sets or retrieves whether the image is a server-side image map.",
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "loading": {
                    "type": "string"
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "longDesc": {
                    "type": "string"
                },
                "lowsrc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "naturalHeight": {
                    "description": "The original height of the image resource before sizing.",
                    "type": "number"
                },
                "naturalWidth": {
                    "description": "The original width of the image resource before sizing.",
                    "type": "number"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "referrerPolicy": {
                    "type": "string"
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "sizes": {
                    "type": "string"
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "src": {
                    "description": "The address or URL of the a media resource that is to be considered.",
                    "type": "string"
                },
                "srcset": {
                    "type": "string"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                },
                "useMap": {
                    "description": "Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.",
                    "type": "string"
                },
                "vspace": {
                    "type": "number"
                },
                "width": {
                    "description": "Sets or retrieves the width of the object.",
                    "type": "number"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "HTMLScriptElement": {
            "description": "HTML <script> elements expose the HTMLScriptElement interface, which provides special properties and methods for manipulating the behavior and execution of <script> elements (beyond the inherited HTMLElement interface).",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "async": {
                    "type": "boolean"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "charset": {
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "contentEditable": {
                    "type": "string"
                },
                "crossOrigin": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "defer": {
                    "description": "Sets or retrieves the status of the script.",
                    "type": "boolean"
                },
                "dir": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "hidden": {
                    "type": "boolean"
                },
                "htmlFor": {
                    "type": "string"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "integrity": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "noModule": {
                    "type": "boolean"
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "referrerPolicy": {
                    "type": "string"
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "src": {
                    "description": "Retrieves the URL to an external file that contains the source code or data.",
                    "type": "string"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "text": {
                    "description": "Retrieves or sets the text of the object as a string.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                },
                "type": {
                    "description": "Sets or retrieves the MIME type for the associated scripting engine.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HTMLSlotElement": {
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "accessKey": {
                    "type": "string"
                },
                "accessKeyLabel": {
                    "type": "string"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autocapitalize": {
                    "type": "string"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it.",
                    "type": "string"
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "contentEditable": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "dir": {
                    "type": "string"
                },
                "draggable": {
                    "type": "boolean"
                },
                "enterKeyHint": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "innerText": {
                    "type": "string"
                },
                "inputMode": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "isContentEditable": {
                    "type": "boolean"
                },
                "lang": {
                    "type": "string"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "offsetHeight": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetParent": {
                    "$ref": "#/definitions/Element"
                },
                "offsetTop": {
                    "type": "number"
                },
                "offsetWidth": {
                    "type": "number"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "spellcheck": {
                    "type": "boolean"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translate": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "History": {
            "description": "Allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in.",
            "properties": {
                "length": {
                    "type": "number"
                },
                "scrollRestoration": {
                    "$ref": "#/definitions/ScrollRestoration"
                },
                "state": {
                }
            },
            "type": "object"
        },
        "IDBFactory": {
            "description": "In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.)",
            "type": "object"
        },
        "Location": {
            "description": "The location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Document.location and Window.location respectively.",
            "properties": {
                "ancestorOrigins": {
                    "additionalProperties": false,
                    "description": "Returns a DOMStringList object listing the origins of the ancestor browsing contexts, from the parent browsing context to the top-level browsing context.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "hash": {
                    "description": "Returns the Location object's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to navigate to the same URL with a changed fragment (ignores leading \"#\").",
                    "type": "string"
                },
                "host": {
                    "description": "Returns the Location object's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to navigate to the same URL with a changed host and port.",
                    "type": "string"
                },
                "hostname": {
                    "description": "Returns the Location object's URL's host.\n\nCan be set, to navigate to the same URL with a changed host.",
                    "type": "string"
                },
                "href": {
                    "description": "Returns the Location object's URL.\n\nCan be set, to navigate to the given URL.",
                    "type": "string"
                },
                "origin": {
                    "description": "Returns the Location object's URL's origin.",
                    "type": "string"
                },
                "pathname": {
                    "description": "Returns the Location object's URL's path.\n\nCan be set, to navigate to the same URL with a changed path.",
                    "type": "string"
                },
                "port": {
                    "description": "Returns the Location object's URL's port.\n\nCan be set, to navigate to the same URL with a changed port.",
                    "type": "string"
                },
                "protocol": {
                    "description": "Returns the Location object's URL's scheme.\n\nCan be set, to navigate to the same URL with a changed scheme.",
                    "type": "string"
                },
                "search": {
                    "description": "Returns the Location object's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to navigate to the same URL with a changed query (ignores leading \"?\").",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MediaDevices": {
            "description": "Provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.",
            "properties": {
                "ondevicechange": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MimeType": {
            "description": "Provides contains information about a MIME type associated with a particular plugin. NavigatorPlugins.mimeTypes returns an array of this object.",
            "properties": {
                "description": {
                    "description": "Returns the MIME type's description.",
                    "type": "string"
                },
                "enabledPlugin": {
                    "additionalProperties": false,
                    "description": "Returns the Plugin object that implements this MIME type.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/MimeType"
                        }
                    },
                    "type": "object"
                },
                "suffixes": {
                    "description": "Returns the MIME type's typical file extensions, in a comma-separated list.",
                    "type": "string"
                },
                "type": {
                    "description": "Returns the MIME type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Navigator": {
            "description": "The state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities.",
            "properties": {
                "activeVRDisplays": {
                    "items": {
                        "$ref": "#/definitions/VRDisplay"
                    },
                    "type": "array"
                },
                "appCodeName": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "appVersion": {
                    "type": "string"
                },
                "clipboard": {
                    "$ref": "#/definitions/Clipboard"
                },
                "cookieEnabled": {
                    "type": "boolean"
                },
                "credentials": {
                    "$ref": "#/definitions/CredentialsContainer"
                },
                "doNotTrack": {
                    "type": "string"
                },
                "geolocation": {
                    "$ref": "#/definitions/Geolocation"
                },
                "hardwareConcurrency": {
                    "type": "number"
                },
                "language": {
                    "type": "string"
                },
                "languages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "maxTouchPoints": {
                    "type": "number"
                },
                "mediaDevices": {
                    "$ref": "#/definitions/MediaDevices"
                },
                "mimeTypes": {
                    "additionalProperties": false,
                    "description": "Returns an array of MimeType instances, each of which contains information about a supported browser plugins. This object is returned by NavigatorPlugins.mimeTypes.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/MimeType"
                        }
                    },
                    "type": "object"
                },
                "msManipulationViewsEnabled": {
                    "type": "boolean"
                },
                "msMaxTouchPoints": {
                    "type": "number"
                },
                "msPointerEnabled": {
                    "type": "boolean"
                },
                "onLine": {
                    "type": "boolean"
                },
                "permissions": {
                    "$ref": "#/definitions/Permissions"
                },
                "platform": {
                    "type": "string"
                },
                "plugins": {
                    "additionalProperties": false,
                    "description": "Used to store a list of Plugin objects describing the available plugins; it's returned by the window.navigator.plugins property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem(\"name\") methods.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "additionalProperties": false,
                            "description": "Provides information about a browser plugin.",
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "$ref": "#/definitions/MimeType"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "pointerEnabled": {
                    "type": "boolean"
                },
                "product": {
                    "type": "string"
                },
                "productSub": {
                    "type": "string"
                },
                "serviceWorker": {
                    "$ref": "#/definitions/ServiceWorkerContainer"
                },
                "storage": {
                    "$ref": "#/definitions/StorageManager"
                },
                "userAgent": {
                    "type": "string"
                },
                "vendor": {
                    "type": "string"
                },
                "vendorSub": {
                    "type": "string"
                },
                "webdriver": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Node": {
            "description": "Node is an interface from which a number of DOM API object types inherit. It allows those types to be treated similarly; for example, inheriting the same set of methods, or being tested in the same way.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "namespaceURI": {
                    "type": "string"
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "textContent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OnErrorEventHandlerNonNull": {
            "type": "object"
        },
        "OrientationType": {
            "enum": [
                "landscape-primary",
                "landscape-secondary",
                "portrait-primary",
                "portrait-secondary"
            ],
            "type": "string"
        },
        "ParentNode": {
            "properties": {
                "childElementCount": {
                    "type": "number"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                }
            },
            "type": "object"
        },
        "Performance": {
            "description": "Provides access to performance-related information for the current page. It's part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API.",
            "properties": {
                "navigation": {
                    "$ref": "#/definitions/PerformanceNavigation"
                },
                "onresourcetimingbufferfull": {
                    "type": "object"
                },
                "timeOrigin": {
                    "type": "number"
                },
                "timing": {
                    "$ref": "#/definitions/PerformanceTiming"
                }
            },
            "type": "object"
        },
        "PerformanceNavigation": {
            "description": "The legacy PerformanceNavigation interface represents information about how the navigation to the current document was done.",
            "properties": {
                "TYPE_BACK_FORWARD": {
                    "type": "number"
                },
                "TYPE_NAVIGATE": {
                    "type": "number"
                },
                "TYPE_RELOAD": {
                    "type": "number"
                },
                "TYPE_RESERVED": {
                    "type": "number"
                },
                "redirectCount": {
                    "type": "number"
                },
                "type": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PerformanceTiming": {
            "description": "A legacy interface kept for backwards compatibility and contains properties that offer performance timing information for various events which occur during the loading and use of the current page. You get a PerformanceTiming object describing your page using the window.performance.timing property.",
            "properties": {
                "connectEnd": {
                    "type": "number"
                },
                "connectStart": {
                    "type": "number"
                },
                "domComplete": {
                    "type": "number"
                },
                "domContentLoadedEventEnd": {
                    "type": "number"
                },
                "domContentLoadedEventStart": {
                    "type": "number"
                },
                "domInteractive": {
                    "type": "number"
                },
                "domLoading": {
                    "type": "number"
                },
                "domainLookupEnd": {
                    "type": "number"
                },
                "domainLookupStart": {
                    "type": "number"
                },
                "fetchStart": {
                    "type": "number"
                },
                "loadEventEnd": {
                    "type": "number"
                },
                "loadEventStart": {
                    "type": "number"
                },
                "navigationStart": {
                    "type": "number"
                },
                "redirectEnd": {
                    "type": "number"
                },
                "redirectStart": {
                    "type": "number"
                },
                "requestStart": {
                    "type": "number"
                },
                "responseEnd": {
                    "type": "number"
                },
                "responseStart": {
                    "type": "number"
                },
                "secureConnectionStart": {
                    "type": "number"
                },
                "unloadEventEnd": {
                    "type": "number"
                },
                "unloadEventStart": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Permissions": {
            "type": "object"
        },
        "ProcessingInstruction": {
            "description": "A processing instruction embeds application-specific instructions in XML which can be ignored by other applications that don't recognize them.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "data": {
                    "type": "string"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "length": {
                    "type": "number"
                },
                "namespaceURI": {
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "sheet": {
                    "$ref": "#/definitions/CSSStyleSheet"
                },
                "target": {
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Promise<ServiceWorkerRegistration>": {
            "description": "Represents the completion of an asynchronous operation",
            "type": "object"
        },
        "SVGAnimatedLength": {
            "description": "Used for attributes of basic type <length> which can be animated.",
            "properties": {
                "animVal": {
                    "$ref": "#/definitions/SVGLength"
                },
                "baseVal": {
                    "$ref": "#/definitions/SVGLength"
                }
            },
            "type": "object"
        },
        "SVGAnimatedPreserveAspectRatio": {
            "description": "Used for attributes of type SVGPreserveAspectRatio which can be animated.",
            "properties": {
                "animVal": {
                    "$ref": "#/definitions/SVGPreserveAspectRatio"
                },
                "baseVal": {
                    "$ref": "#/definitions/SVGPreserveAspectRatio"
                }
            },
            "type": "object"
        },
        "SVGAnimatedRect": {
            "description": "Used for attributes of basic SVGRect which can be animated.",
            "properties": {
                "animVal": {
                    "$ref": "#/definitions/DOMRectReadOnly"
                },
                "baseVal": {
                    "$ref": "#/definitions/DOMRect"
                }
            },
            "type": "object"
        },
        "SVGAnimatedString": {
            "description": "The SVGAnimatedString interface represents string attributes which can be animated from each SVG declaration. You need to create SVG attribute before doing anything else, everything should be declared inside this.",
            "properties": {
                "animVal": {
                    "type": "string"
                },
                "baseVal": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SVGAnimatedTransformList": {
            "description": "Used for attributes which take a list of numbers and which can be animated.",
            "properties": {
                "animVal": {
                    "$ref": "#/definitions/SVGTransformList"
                },
                "baseVal": {
                    "$ref": "#/definitions/SVGTransformList"
                }
            },
            "type": "object"
        },
        "SVGElement": {
            "description": "All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the SVGElement interface.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it."
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "correspondingElement": {
                    "$ref": "#/definitions/SVGElement"
                },
                "correspondingUseElement": {
                    "$ref": "#/definitions/SVGUseElement"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "ownerSVGElement": {
                    "$ref": "#/definitions/SVGSVGElement"
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "viewportElement": {
                    "$ref": "#/definitions/SVGElement"
                }
            },
            "type": "object"
        },
        "SVGElementInstance": {
            "properties": {
                "correspondingElement": {
                    "$ref": "#/definitions/SVGElement"
                },
                "correspondingUseElement": {
                    "$ref": "#/definitions/SVGUseElement"
                }
            },
            "type": "object"
        },
        "SVGLength": {
            "description": "Correspond to the <length> basic data type.",
            "properties": {
                "SVG_LENGTHTYPE_CM": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_EMS": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_EXS": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_IN": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_MM": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_NUMBER": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_PC": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_PERCENTAGE": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_PT": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_PX": {
                    "type": "number"
                },
                "SVG_LENGTHTYPE_UNKNOWN": {
                    "type": "number"
                },
                "unitType": {
                    "type": "number"
                },
                "value": {
                    "type": "number"
                },
                "valueAsString": {
                    "type": "string"
                },
                "valueInSpecifiedUnits": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SVGPreserveAspectRatio": {
            "description": "Corresponds to the preserveAspectRatio attribute, which is available for some of SVG's elements.",
            "properties": {
                "SVG_MEETORSLICE_MEET": {
                    "type": "number"
                },
                "SVG_MEETORSLICE_SLICE": {
                    "type": "number"
                },
                "SVG_MEETORSLICE_UNKNOWN": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_NONE": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_UNKNOWN": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMAXYMAX": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMAXYMID": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMAXYMIN": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMIDYMAX": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMIDYMID": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMIDYMIN": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMINYMAX": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMINYMID": {
                    "type": "number"
                },
                "SVG_PRESERVEASPECTRATIO_XMINYMIN": {
                    "type": "number"
                },
                "align": {
                    "type": "number"
                },
                "meetOrSlice": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SVGSVGElement": {
            "description": "Provides access to the properties of <svg> elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it."
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "contentScriptType": {
                    "type": "string"
                },
                "contentStyleType": {
                    "type": "string"
                },
                "correspondingElement": {
                    "$ref": "#/definitions/SVGElement"
                },
                "correspondingUseElement": {
                    "$ref": "#/definitions/SVGUseElement"
                },
                "currentScale": {
                    "type": "number"
                },
                "currentTranslate": {
                    "$ref": "#/definitions/DOMPoint"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "height": {
                    "$ref": "#/definitions/SVGAnimatedLength"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onunload": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "onzoom": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "ownerSVGElement": {
                    "$ref": "#/definitions/SVGSVGElement"
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "pixelUnitToMillimeterX": {
                    "type": "number"
                },
                "pixelUnitToMillimeterY": {
                    "type": "number"
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "preserveAspectRatio": {
                    "$ref": "#/definitions/SVGAnimatedPreserveAspectRatio"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "requiredExtensions": {
                    "additionalProperties": false,
                    "description": "The SVGStringList defines a list of DOMString objects.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "screenPixelToMillimeterX": {
                    "type": "number"
                },
                "screenPixelToMillimeterY": {
                    "type": "number"
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "systemLanguage": {
                    "additionalProperties": false,
                    "description": "The SVGStringList defines a list of DOMString objects.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "transform": {
                    "$ref": "#/definitions/SVGAnimatedTransformList"
                },
                "viewBox": {
                    "$ref": "#/definitions/SVGAnimatedRect"
                },
                "viewport": {
                    "$ref": "#/definitions/DOMRect"
                },
                "viewportElement": {
                    "$ref": "#/definitions/SVGElement"
                },
                "width": {
                    "$ref": "#/definitions/SVGAnimatedLength"
                },
                "x": {
                    "$ref": "#/definitions/SVGAnimatedLength"
                },
                "y": {
                    "$ref": "#/definitions/SVGAnimatedLength"
                },
                "zoomAndPan": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SVGScriptElement": {
            "description": "Corresponds to the SVG <script> element.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it."
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "correspondingElement": {
                    "$ref": "#/definitions/SVGElement"
                },
                "correspondingUseElement": {
                    "$ref": "#/definitions/SVGUseElement"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "href": {
                    "$ref": "#/definitions/SVGAnimatedString"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "ownerSVGElement": {
                    "$ref": "#/definitions/SVGSVGElement"
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "viewportElement": {
                    "$ref": "#/definitions/SVGElement"
                }
            },
            "type": "object"
        },
        "SVGTransformList": {
            "description": "The SVGTransformList defines a list of SVGTransform objects.",
            "properties": {
                "numberOfItems": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SVGUseElement": {
            "description": "Corresponds to the <use> element.",
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "animatedInstanceRoot": {
                    "$ref": "#/definitions/SVGElementInstance"
                },
                "assignedSlot": {
                    "$ref": "#/definitions/HTMLSlotElement"
                },
                "attributes": {
                    "additionalProperties": false,
                    "description": "A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Attr"
                        }
                    },
                    "type": "object"
                },
                "autofocus": {
                    "type": "boolean"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "classList": {
                    "additionalProperties": false,
                    "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "className": {
                    "description": "Returns the value of element's class content attribute. Can be set to change it."
                },
                "clientHeight": {
                    "type": "number"
                },
                "clientLeft": {
                    "type": "number"
                },
                "clientTop": {
                    "type": "number"
                },
                "clientWidth": {
                    "type": "number"
                },
                "correspondingElement": {
                    "$ref": "#/definitions/SVGElement"
                },
                "correspondingUseElement": {
                    "$ref": "#/definitions/SVGUseElement"
                },
                "dataset": {
                    "$ref": "#/definitions/DOMStringMap"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "height": {
                    "$ref": "#/definitions/SVGAnimatedLength"
                },
                "href": {
                    "$ref": "#/definitions/SVGAnimatedString"
                },
                "id": {
                    "description": "Returns the value of element's id content attribute. Can be set to change it.",
                    "type": "string"
                },
                "innerHTML": {
                    "type": "string"
                },
                "instanceRoot": {
                    "$ref": "#/definitions/SVGElementInstance"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "localName": {
                    "description": "Returns the local name.",
                    "type": "string"
                },
                "namespaceURI": {
                    "description": "Returns the namespace.",
                    "type": "string"
                },
                "nextElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first following sibling that is an element, and null otherwise."
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "onabort": {
                    "description": "Fires when the user aborts the download.",
                    "type": "object"
                },
                "onanimationcancel": {
                    "type": "object"
                },
                "onanimationend": {
                    "type": "object"
                },
                "onanimationiteration": {
                    "type": "object"
                },
                "onanimationstart": {
                    "type": "object"
                },
                "onauxclick": {
                    "type": "object"
                },
                "onblur": {
                    "description": "Fires when the object loses the input focus.",
                    "type": "object"
                },
                "oncancel": {
                    "type": "object"
                },
                "oncanplay": {
                    "description": "Occurs when playback is possible, but would require further buffering.",
                    "type": "object"
                },
                "oncanplaythrough": {
                    "type": "object"
                },
                "onchange": {
                    "description": "Fires when the contents of the object or selection have changed.",
                    "type": "object"
                },
                "onclick": {
                    "description": "Fires when the user clicks the left mouse button on the object",
                    "type": "object"
                },
                "onclose": {
                    "type": "object"
                },
                "oncontextmenu": {
                    "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
                    "type": "object"
                },
                "oncopy": {
                    "type": "object"
                },
                "oncuechange": {
                    "type": "object"
                },
                "oncut": {
                    "type": "object"
                },
                "ondblclick": {
                    "description": "Fires when the user double-clicks the object.",
                    "type": "object"
                },
                "ondrag": {
                    "description": "Fires on the source object continuously during a drag operation.",
                    "type": "object"
                },
                "ondragend": {
                    "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
                    "type": "object"
                },
                "ondragenter": {
                    "description": "Fires on the target element when the user drags the object to a valid drop target.",
                    "type": "object"
                },
                "ondragexit": {
                    "type": "object"
                },
                "ondragleave": {
                    "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
                    "type": "object"
                },
                "ondragover": {
                    "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
                    "type": "object"
                },
                "ondragstart": {
                    "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
                    "type": "object"
                },
                "ondrop": {
                    "type": "object"
                },
                "ondurationchange": {
                    "description": "Occurs when the duration attribute is updated.",
                    "type": "object"
                },
                "onemptied": {
                    "description": "Occurs when the media element is reset to its initial state.",
                    "type": "object"
                },
                "onended": {
                    "description": "Occurs when the end of playback is reached.",
                    "type": "object"
                },
                "onerror": {
                    "$ref": "#/definitions/OnErrorEventHandlerNonNull",
                    "description": "Fires when an error occurs during object loading."
                },
                "onfocus": {
                    "description": "Fires when the object receives focus.",
                    "type": "object"
                },
                "onfullscreenchange": {
                    "type": "object"
                },
                "onfullscreenerror": {
                    "type": "object"
                },
                "ongotpointercapture": {
                    "type": "object"
                },
                "oninput": {
                    "type": "object"
                },
                "oninvalid": {
                    "type": "object"
                },
                "onkeydown": {
                    "description": "Fires when the user presses a key.",
                    "type": "object"
                },
                "onkeypress": {
                    "description": "Fires when the user presses an alphanumeric key.",
                    "type": "object"
                },
                "onkeyup": {
                    "description": "Fires when the user releases a key.",
                    "type": "object"
                },
                "onload": {
                    "description": "Fires immediately after the browser loads the object.",
                    "type": "object"
                },
                "onloadeddata": {
                    "description": "Occurs when media data is loaded at the current playback position.",
                    "type": "object"
                },
                "onloadedmetadata": {
                    "description": "Occurs when the duration and dimensions of the media have been determined.",
                    "type": "object"
                },
                "onloadstart": {
                    "description": "Occurs when Internet Explorer begins looking for media data.",
                    "type": "object"
                },
                "onlostpointercapture": {
                    "type": "object"
                },
                "onmousedown": {
                    "description": "Fires when the user clicks the object with either mouse button.",
                    "type": "object"
                },
                "onmouseenter": {
                    "type": "object"
                },
                "onmouseleave": {
                    "type": "object"
                },
                "onmousemove": {
                    "description": "Fires when the user moves the mouse over the object.",
                    "type": "object"
                },
                "onmouseout": {
                    "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
                    "type": "object"
                },
                "onmouseover": {
                    "description": "Fires when the user moves the mouse pointer into the object.",
                    "type": "object"
                },
                "onmouseup": {
                    "description": "Fires when the user releases a mouse button while the mouse is over the object.",
                    "type": "object"
                },
                "onpaste": {
                    "type": "object"
                },
                "onpause": {
                    "description": "Occurs when playback is paused.",
                    "type": "object"
                },
                "onplay": {
                    "description": "Occurs when the play method is requested.",
                    "type": "object"
                },
                "onplaying": {
                    "description": "Occurs when the audio or video has started playing.",
                    "type": "object"
                },
                "onpointercancel": {
                    "type": "object"
                },
                "onpointerdown": {
                    "type": "object"
                },
                "onpointerenter": {
                    "type": "object"
                },
                "onpointerleave": {
                    "type": "object"
                },
                "onpointermove": {
                    "type": "object"
                },
                "onpointerout": {
                    "type": "object"
                },
                "onpointerover": {
                    "type": "object"
                },
                "onpointerup": {
                    "type": "object"
                },
                "onprogress": {
                    "description": "Occurs to indicate progress while downloading media data.",
                    "type": "object"
                },
                "onratechange": {
                    "description": "Occurs when the playback rate is increased or decreased.",
                    "type": "object"
                },
                "onreset": {
                    "description": "Fires when the user resets a form.",
                    "type": "object"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
                    "type": "object"
                },
                "onsecuritypolicyviolation": {
                    "type": "object"
                },
                "onseeked": {
                    "description": "Occurs when the seek operation ends.",
                    "type": "object"
                },
                "onseeking": {
                    "description": "Occurs when the current playback position is moved.",
                    "type": "object"
                },
                "onselect": {
                    "description": "Fires when the current selection changes.",
                    "type": "object"
                },
                "onselectionchange": {
                    "type": "object"
                },
                "onselectstart": {
                    "type": "object"
                },
                "onstalled": {
                    "description": "Occurs when the download has stopped.",
                    "type": "object"
                },
                "onsubmit": {
                    "type": "object"
                },
                "onsuspend": {
                    "description": "Occurs if the load operation has been intentionally halted.",
                    "type": "object"
                },
                "ontimeupdate": {
                    "description": "Occurs to indicate the current playback position.",
                    "type": "object"
                },
                "ontoggle": {
                    "type": "object"
                },
                "ontouchcancel": {
                    "type": "object"
                },
                "ontouchend": {
                    "type": "object"
                },
                "ontouchmove": {
                    "type": "object"
                },
                "ontouchstart": {
                    "type": "object"
                },
                "ontransitioncancel": {
                    "type": "object"
                },
                "ontransitionend": {
                    "type": "object"
                },
                "ontransitionrun": {
                    "type": "object"
                },
                "ontransitionstart": {
                    "type": "object"
                },
                "onvolumechange": {
                    "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
                    "type": "object"
                },
                "onwaiting": {
                    "description": "Occurs when playback stops because the next frame of a video resource is not available.",
                    "type": "object"
                },
                "onwheel": {
                    "type": "object"
                },
                "outerHTML": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "ownerSVGElement": {
                    "$ref": "#/definitions/SVGSVGElement"
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "prefix": {
                    "description": "Returns the namespace prefix.",
                    "type": "string"
                },
                "previousElementSibling": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first preceding sibling that is an element, and null otherwise."
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "requiredExtensions": {
                    "additionalProperties": false,
                    "description": "The SVGStringList defines a list of DOMString objects.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "scrollHeight": {
                    "type": "number"
                },
                "scrollLeft": {
                    "type": "number"
                },
                "scrollTop": {
                    "type": "number"
                },
                "scrollWidth": {
                    "type": "number"
                },
                "shadowRoot": {
                    "$ref": "#/definitions/ShadowRoot",
                    "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise."
                },
                "slot": {
                    "description": "Returns the value of element's slot content attribute. Can be set to change it.",
                    "type": "string"
                },
                "style": {
                    "additionalProperties": false,
                    "description": "An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "systemLanguage": {
                    "additionalProperties": false,
                    "description": "The SVGStringList defines a list of DOMString objects.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "tabIndex": {
                    "type": "number"
                },
                "tagName": {
                    "description": "Returns the HTML-uppercased qualified name.",
                    "type": "string"
                },
                "textContent": {
                    "type": "string"
                },
                "transform": {
                    "$ref": "#/definitions/SVGAnimatedTransformList"
                },
                "viewportElement": {
                    "$ref": "#/definitions/SVGElement"
                },
                "width": {
                    "$ref": "#/definitions/SVGAnimatedLength"
                },
                "x": {
                    "$ref": "#/definitions/SVGAnimatedLength"
                },
                "y": {
                    "$ref": "#/definitions/SVGAnimatedLength"
                }
            },
            "type": "object"
        },
        "Screen": {
            "description": "A screen, usually the one on which the current window is being rendered, and is obtained using window.screen.",
            "properties": {
                "availHeight": {
                    "type": "number"
                },
                "availWidth": {
                    "type": "number"
                },
                "colorDepth": {
                    "type": "number"
                },
                "height": {
                    "type": "number"
                },
                "orientation": {
                    "$ref": "#/definitions/ScreenOrientation"
                },
                "pixelDepth": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ScreenOrientation": {
            "properties": {
                "angle": {
                    "type": "number"
                },
                "onchange": {
                    "type": "object"
                },
                "type": {
                    "$ref": "#/definitions/OrientationType"
                }
            },
            "type": "object"
        },
        "ScrollRestoration": {
            "enum": [
                "auto",
                "manual"
            ],
            "type": "string"
        },
        "ServiceWorker": {
            "description": "This ServiceWorker API interface provides a reference to a service worker. Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object.",
            "properties": {
                "onerror": {
                    "type": "object"
                },
                "onstatechange": {
                    "type": "object"
                },
                "scriptURL": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/ServiceWorkerState"
                }
            },
            "type": "object"
        },
        "ServiceWorkerContainer": {
            "description": "The ServiceWorkerContainer interface of the ServiceWorker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.",
            "properties": {
                "controller": {
                    "$ref": "#/definitions/ServiceWorker"
                },
                "oncontrollerchange": {
                    "type": "object"
                },
                "onmessage": {
                    "type": "object"
                },
                "onmessageerror": {
                    "type": "object"
                },
                "ready": {
                    "$ref": "#/definitions/Promise<ServiceWorkerRegistration>"
                }
            },
            "type": "object"
        },
        "ServiceWorkerState": {
            "enum": [
                "activated",
                "activating",
                "installed",
                "installing",
                "parsed",
                "redundant"
            ],
            "type": "string"
        },
        "ShadowRoot": {
            "properties": {
                "ATTRIBUTE_NODE": {
                    "type": "number"
                },
                "CDATA_SECTION_NODE": {
                    "description": "node is a CDATASection node.",
                    "type": "number"
                },
                "COMMENT_NODE": {
                    "description": "node is a Comment node.",
                    "type": "number"
                },
                "DOCUMENT_FRAGMENT_NODE": {
                    "description": "node is a DocumentFragment node.",
                    "type": "number"
                },
                "DOCUMENT_NODE": {
                    "description": "node is a document.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINED_BY": {
                    "description": "Set when other is a descendant of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_CONTAINS": {
                    "description": "Set when other is an ancestor of node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_DISCONNECTED": {
                    "description": "Set when node and other are not in the same tree.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_FOLLOWING": {
                    "description": "Set when other is following node.",
                    "type": "number"
                },
                "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                    "type": "number"
                },
                "DOCUMENT_POSITION_PRECEDING": {
                    "description": "Set when other is preceding node.",
                    "type": "number"
                },
                "DOCUMENT_TYPE_NODE": {
                    "description": "node is a doctype.",
                    "type": "number"
                },
                "ELEMENT_NODE": {
                    "description": "node is an element.",
                    "type": "number"
                },
                "ENTITY_NODE": {
                    "type": "number"
                },
                "ENTITY_REFERENCE_NODE": {
                    "type": "number"
                },
                "NOTATION_NODE": {
                    "type": "number"
                },
                "PROCESSING_INSTRUCTION_NODE": {
                    "description": "node is a ProcessingInstruction node.",
                    "type": "number"
                },
                "TEXT_NODE": {
                    "description": "node is a Text node.",
                    "type": "number"
                },
                "activeElement": {
                    "$ref": "#/definitions/Element"
                },
                "baseURI": {
                    "description": "Returns node's node document's document base URL.",
                    "type": "string"
                },
                "childElementCount": {
                    "type": "number"
                },
                "childNodes": {
                    "description": "Returns the children.",
                    "items": {
                        "$ref": "#/definitions/ChildNode"
                    },
                    "type": "array"
                },
                "children": {
                    "additionalProperties": false,
                    "description": "Returns the child elements.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/Element"
                        }
                    },
                    "type": "object"
                },
                "firstChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the first child."
                },
                "firstElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the first child that is an element, and null otherwise."
                },
                "fullscreenElement": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns document's fullscreen element."
                },
                "host": {
                    "$ref": "#/definitions/Element"
                },
                "innerHTML": {
                    "type": "string"
                },
                "isConnected": {
                    "description": "Returns true if node is connected and false otherwise.",
                    "type": "boolean"
                },
                "lastChild": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the last child."
                },
                "lastElementChild": {
                    "$ref": "#/definitions/Element",
                    "description": "Returns the last child that is an element, and null otherwise."
                },
                "mode": {
                    "$ref": "#/definitions/ShadowRootMode"
                },
                "namespaceURI": {
                    "type": "string"
                },
                "nextSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the next sibling."
                },
                "nodeName": {
                    "description": "Returns a string appropriate for the type of node.",
                    "type": "string"
                },
                "nodeType": {
                    "description": "Returns the type of node.",
                    "type": "number"
                },
                "nodeValue": {
                    "type": "string"
                },
                "ownerDocument": {
                    "$ref": "#/definitions/Document",
                    "description": "Returns the node document. Returns null for documents."
                },
                "parentElement": {
                    "$ref": "#/definitions/HTMLElement",
                    "description": "Returns the parent element."
                },
                "parentNode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Node"
                        },
                        {
                            "$ref": "#/definitions/ParentNode"
                        }
                    ],
                    "description": "Returns the parent."
                },
                "pointerLockElement": {
                    "$ref": "#/definitions/Element"
                },
                "previousSibling": {
                    "$ref": "#/definitions/ChildNode",
                    "description": "Returns the previous sibling."
                },
                "styleSheets": {
                    "additionalProperties": false,
                    "description": "Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "$ref": "#/definitions/CSSStyleSheet"
                        }
                    },
                    "type": "object"
                },
                "textContent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ShadowRootMode": {
            "enum": [
                "closed",
                "open"
            ],
            "type": "string"
        },
        "SpeechSynthesis": {
            "description": "This Web Speech API interface is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides.",
            "properties": {
                "onvoiceschanged": {
                    "type": "object"
                },
                "paused": {
                    "type": "boolean"
                },
                "pending": {
                    "type": "boolean"
                },
                "speaking": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Storage": {
            "additionalProperties": {
            },
            "description": "This Web Storage API interface provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.",
            "properties": {
                "length": {
                    "description": "Returns the number of key/value pairs currently present in the list associated with the object.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "StorageManager": {
            "type": "object"
        },
        "StyleMedia": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SubtleCrypto": {
            "description": "This Web Crypto API interface provides a number of low-level cryptographic functions. It is accessed via the Crypto.subtle properties available in a window context (via Window.crypto).",
            "type": "object"
        },
        "VRDisplay": {
            "description": "This WebVR API interface represents any VR device supported by this API. It includes generic information such as device IDs and descriptions, as well as methods for starting to present a VR scene, retrieving eye parameters and display capabilities, and other important functionality.",
            "properties": {
                "capabilities": {
                    "$ref": "#/definitions/VRDisplayCapabilities"
                },
                "depthFar": {
                    "type": "number"
                },
                "depthNear": {
                    "type": "number"
                },
                "displayId": {
                    "type": "number"
                },
                "displayName": {
                    "type": "string"
                },
                "isConnected": {
                    "type": "boolean"
                },
                "isPresenting": {
                    "type": "boolean"
                },
                "stageParameters": {
                    "$ref": "#/definitions/VRStageParameters"
                }
            },
            "type": "object"
        },
        "VRDisplayCapabilities": {
            "description": "This WebVR API interface describes the capabilities of a VRDisplay — its features can be used to perform VR device capability tests, for example can it return position information.",
            "properties": {
                "canPresent": {
                    "type": "boolean"
                },
                "hasExternalDisplay": {
                    "type": "boolean"
                },
                "hasOrientation": {
                    "type": "boolean"
                },
                "hasPosition": {
                    "type": "boolean"
                },
                "maxLayers": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "VRStageParameters": {
            "properties": {
                "sittingToStandingTransform": {
                    "additionalProperties": false,
                    "description": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\nof bytes could not be allocated an exception is raised.",
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "sizeX": {
                    "type": "number"
                },
                "sizeY": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "VisibilityState": {
            "enum": [
                "hidden",
                "visible"
            ],
            "type": "string"
        },
        "VisualViewport": {
            "properties": {
                "height": {
                    "type": "number"
                },
                "offsetLeft": {
                    "type": "number"
                },
                "offsetTop": {
                    "type": "number"
                },
                "onresize": {
                    "type": "object"
                },
                "onscroll": {
                    "type": "object"
                },
                "pageLeft": {
                    "type": "number"
                },
                "pageTop": {
                    "type": "number"
                },
                "scale": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Window": {
            "description": "A window containing a DOM document; the document property points to the DOM document loaded in that window.",
            "items": {
                "$ref": "#/definitions/Window"
            },
            "type": "array"
        },
        "monaco.Uri": {
            "description": "Uniform Resource Identifier (Uri) http://tools.ietf.org/html/rfc3986.\nThis class is a simple parser which creates the basic component parts\n(http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\nand encoding.\n\n```txt\n      foo://example.com:8042/over/there?name=ferret#nose\n      \\_/   \\______________/\\_________/ \\_________/ \\__/\n       |           |            |            |        |\n    scheme     authority       path        query   fragment\n       |   _____________________|__\n      / \\ /                        \\\n      urn:example:animal:ferret:nose\n```",
            "properties": {
                "authority": {
                    "description": "authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\nThe part between the first double slashes and the next slash.",
                    "type": "string"
                },
                "fragment": {
                    "description": "fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.",
                    "type": "string"
                },
                "fsPath": {
                    "description": "Returns a string representing the corresponding file system path of this Uri.\nWill handle UNC paths, normalizes windows drive letters to lower-case, and uses the\nplatform specific path separator.\n\n* Will *not* validate the path for invalid characters and semantics.\n* Will *not* look at the scheme of this Uri.\n* The result shall *not* be used for display purposes but for accessing a file on disk.\n\n\nThe *difference* to `Uri#path` is the use of the platform specific separator and the handling\nof UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\n```ts\n const u = Uri.parse('file://server/c$/folder/file.txt')\n u.authority === 'server'\n u.path === '/shares/c$/file.txt'\n u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n```\n\nUsing `Uri#path` to read a file (using fs-apis) would not be enough because parts of the path,\nnamely the server name, would be missing. Therefore `Uri#fsPath` exists - it's sugar to ease working\nwith URIs that represent files on disk (`file` scheme).",
                    "type": "string"
                },
                "path": {
                    "description": "path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.",
                    "type": "string"
                },
                "query": {
                    "description": "query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.",
                    "type": "string"
                },
                "scheme": {
                    "description": "scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\nThe part before the first colon.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "monaco.editor.EditorAutoClosingOvertypeStrategy": {
            "description": "Configuration options for typing over closing quotes or brackets",
            "enum": [
                "always",
                "auto",
                "never"
            ],
            "type": "string"
        },
        "monaco.editor.EditorAutoClosingStrategy": {
            "description": "Configuration options for auto closing quotes and brackets",
            "enum": [
                "always",
                "beforeWhitespace",
                "languageDefined",
                "never"
            ],
            "type": "string"
        },
        "monaco.editor.EditorAutoSurroundStrategy": {
            "description": "Configuration options for auto wrapping quotes and brackets",
            "enum": [
                "brackets",
                "languageDefined",
                "never",
                "quotes"
            ],
            "type": "string"
        },
        "monaco.editor.GoToLocationValues": {
            "enum": [
                "goto",
                "gotoAndPeek",
                "peek"
            ],
            "type": "string"
        },
        "monaco.editor.IDimension": {
            "properties": {
                "height": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorCommentsOptions": {
            "description": "Configuration options for editor comments",
            "properties": {
                "ignoreEmptyLines": {
                    "description": "Ignore empty lines when inserting line comments.\nDefaults to true.",
                    "type": "boolean"
                },
                "insertSpace": {
                    "description": "Insert a space after the line comment token and inside the block comments tokens.\nDefaults to true.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorFindOptions": {
            "description": "Configuration options for editor find widget",
            "properties": {
                "addExtraSpaceOnTop": {
                    "type": "boolean"
                },
                "autoFindInSelection": {
                    "description": "Controls if Find in Selection flag is turned on in the editor.",
                    "enum": [
                        "always",
                        "multiline",
                        "never"
                    ],
                    "type": "string"
                },
                "cursorMoveOnType": {
                    "description": "Controls whether the cursor should move to find matches while typing.",
                    "type": "boolean"
                },
                "loop": {
                    "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found",
                    "type": "boolean"
                },
                "seedSearchStringFromSelection": {
                    "description": "Controls if we seed search string in the Find Widget with editor selection.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorHoverOptions": {
            "description": "Configuration options for editor hover",
            "properties": {
                "delay": {
                    "description": "Delay for showing the hover.\nDefaults to 300.",
                    "type": "number"
                },
                "enabled": {
                    "description": "Enable the hover.\nDefaults to true.",
                    "type": "boolean"
                },
                "sticky": {
                    "description": "Is the hover sticky such that it can be clicked and its contents selected?\nDefaults to true.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorInlineHintsOptions": {
            "description": "Configuration options for editor inlineHints",
            "properties": {
                "enabled": {
                    "description": "Enable the inline hints.\nDefaults to true.",
                    "type": "boolean"
                },
                "fontFamily": {
                    "description": "Font family of inline hints.\nDefaults to editor font family.",
                    "type": "string"
                },
                "fontSize": {
                    "description": "Font size of inline hints.\nDefault to 90% of the editor font size.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorLightbulbOptions": {
            "description": "Configuration options for editor lightbulb",
            "properties": {
                "enabled": {
                    "description": "Enable the lightbulb code action.\nDefaults to true.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorMinimapOptions": {
            "description": "Configuration options for editor minimap",
            "properties": {
                "enabled": {
                    "description": "Enable the rendering of the minimap.\nDefaults to true.",
                    "type": "boolean"
                },
                "maxColumn": {
                    "description": "Limit the width of the minimap to render at most a certain number of columns.\nDefaults to 120.",
                    "type": "number"
                },
                "renderCharacters": {
                    "description": "Render the actual text on a line (as opposed to color blocks).\nDefaults to true.",
                    "type": "boolean"
                },
                "scale": {
                    "description": "Relative size of the font in the minimap. Defaults to 1.",
                    "type": "number"
                },
                "showSlider": {
                    "description": "Control the rendering of the minimap slider.\nDefaults to 'mouseover'.",
                    "enum": [
                        "always",
                        "mouseover"
                    ],
                    "type": "string"
                },
                "side": {
                    "description": "Control the side of the minimap in editor.\nDefaults to 'right'.",
                    "enum": [
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "size": {
                    "description": "Control the minimap rendering mode.\nDefaults to 'actual'.",
                    "enum": [
                        "fill",
                        "fit",
                        "proportional"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorPaddingOptions": {
            "description": "Configuration options for editor padding",
            "properties": {
                "bottom": {
                    "description": "Spacing between bottom edge of editor and last line.",
                    "type": "number"
                },
                "top": {
                    "description": "Spacing between top edge of editor and first line.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorParameterHintOptions": {
            "description": "Configuration options for parameter hints",
            "properties": {
                "cycle": {
                    "description": "Enable cycling of parameter hints.\nDefaults to false.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enable parameter hints.\nDefaults to true.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "monaco.editor.IEditorScrollbarOptions": {
            "description": "Configuration options for editor scrollbars",
            "properties": {
                "alwaysConsumeMouseWheel": {
                    "description": "Always consume mouse wheel events (always call preventDefault() and stopPropagation() on the browser events).\nDefaults to true.",
                    "type": "boolean"
                },
                "arrowSize": {
                    "description": "The size of arrows (if displayed).\nDefaults to 11.",
                    "type": "number"
                },
                "handleMouseWheel": {
                    "description": "Listen to mouse wheel events and react to them by scrolling.\nDefaults to true.",
                    "type": "boolean"
                },
                "horizontal": {
                    "description": "Render horizontal scrollbar.\nDefaults to 'auto'.",
                    "enum": [
                        "auto",
                        "hidden",
                        "visible"
                    ],
                    "type": "string"
                },
                "horizontalHasArrows": {
                    "description": "Render arrows at the left and right of the horizontal scrollbar.\nDefaults to false.",
                    "type": "boolean"
                },
                "horizontalScrollbarSize": {
                    "description": "Height in pixels for the horizontal scrollbar.\nDefaults to 10 (px).",
                    "type": "number"
                },
                "horizontalSliderSize": {
                    "description": "Height in pixels for the horizontal slider.\nDefaults to `horizontalScrollbarSize`.",
                    "type": "number"
                },
                "scrollByPage": {
                    "description": "Scroll gutter clicks move by page vs jump to position.\nDefaults to false.",
                    "type": "boolean"
                },
                "useShadows": {
                    "description": "Cast horizontal and vertical shadows when the content is scrolled.\nDefaults to true.",
                    "type": "boolean"
                },
                "vertical": {
                    "description": "Render vertical scrollbar.\nDefaults to 'auto'.",
                    "enum": [
                        "auto",
                        "hidden",
                        "visible"
                    ],
                    "type": "string"
                },
                "verticalHasArrows": {
                    "description": "Render arrows at the top and bottom of the vertical scrollbar.\nDefaults to false.",
                    "type": "boolean"
                },
                "verticalScrollbarSize": {
                    "description": "Width in pixels for the vertical scrollbar.\nDefaults to 10 (px).",
                    "type": "number"
                },
                "verticalSliderSize": {
                    "description": "Width in pixels for the vertical slider.\nDefaults to `verticalScrollbarSize`.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "monaco.editor.IGotoLocationOptions": {
            "description": "Configuration options for go to location",
            "properties": {
                "alternativeDeclarationCommand": {
                    "type": "string"
                },
                "alternativeDefinitionCommand": {
                    "type": "string"
                },
                "alternativeImplementationCommand": {
                    "type": "string"
                },
                "alternativeReferenceCommand": {
                    "type": "string"
                },
                "alternativeTypeDefinitionCommand": {
                    "type": "string"
                },
                "multiple": {
                    "$ref": "#/definitions/monaco.editor.GoToLocationValues"
                },
                "multipleDeclarations": {
                    "$ref": "#/definitions/monaco.editor.GoToLocationValues"
                },
                "multipleDefinitions": {
                    "$ref": "#/definitions/monaco.editor.GoToLocationValues"
                },
                "multipleImplementations": {
                    "$ref": "#/definitions/monaco.editor.GoToLocationValues"
                },
                "multipleReferences": {
                    "$ref": "#/definitions/monaco.editor.GoToLocationValues"
                },
                "multipleTypeDefinitions": {
                    "$ref": "#/definitions/monaco.editor.GoToLocationValues"
                }
            },
            "type": "object"
        },
        "monaco.editor.IQuickSuggestionsOptions": {
            "description": "Configuration options for quick suggestions",
            "properties": {
                "comments": {
                    "type": "boolean"
                },
                "other": {
                    "type": "boolean"
                },
                "strings": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "monaco.editor.IRulerOption": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "column": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "monaco.editor.ISmartSelectOptions": {
            "properties": {
                "selectLeadingAndTrailingWhitespace": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "monaco.editor.ISuggestOptions": {
            "description": "Configuration options for editor suggest widget",
            "properties": {
                "filterGraceful": {
                    "description": "Enable graceful matching. Defaults to true.",
                    "type": "boolean"
                },
                "insertMode": {
                    "description": "Overwrite word ends on accept. Default to false.",
                    "enum": [
                        "insert",
                        "replace"
                    ],
                    "type": "string"
                },
                "localityBonus": {
                    "description": "Favours words that appear close to the cursor.",
                    "type": "boolean"
                },
                "shareSuggestSelections": {
                    "description": "Enable using global storage for remembering suggestions.",
                    "type": "boolean"
                },
                "showClasses": {
                    "description": "Show class-suggestions.",
                    "type": "boolean"
                },
                "showColors": {
                    "description": "Show color-suggestions.",
                    "type": "boolean"
                },
                "showConstants": {
                    "description": "Show constant-suggestions.",
                    "type": "boolean"
                },
                "showConstructors": {
                    "description": "Show constructor-suggestions.",
                    "type": "boolean"
                },
                "showEnumMembers": {
                    "description": "Show enumMember-suggestions.",
                    "type": "boolean"
                },
                "showEnums": {
                    "description": "Show enum-suggestions.",
                    "type": "boolean"
                },
                "showEvents": {
                    "description": "Show event-suggestions.",
                    "type": "boolean"
                },
                "showFields": {
                    "description": "Show field-suggestions.",
                    "type": "boolean"
                },
                "showFiles": {
                    "description": "Show file-suggestions.",
                    "type": "boolean"
                },
                "showFolders": {
                    "description": "Show folder-suggestions.",
                    "type": "boolean"
                },
                "showFunctions": {
                    "description": "Show function-suggestions.",
                    "type": "boolean"
                },
                "showIcons": {
                    "description": "Enable or disable icons in suggestions. Defaults to true.",
                    "type": "boolean"
                },
                "showInlineDetails": {
                    "description": "Show details inline with the label. Defaults to true.",
                    "type": "boolean"
                },
                "showInterfaces": {
                    "description": "Show interface-suggestions.",
                    "type": "boolean"
                },
                "showIssues": {
                    "description": "Show issue-suggestions.",
                    "type": "boolean"
                },
                "showKeywords": {
                    "description": "Show keyword-suggestions.",
                    "type": "boolean"
                },
                "showMethods": {
                    "description": "Show method-suggestions.",
                    "type": "boolean"
                },
                "showModules": {
                    "description": "Show module-suggestions.",
                    "type": "boolean"
                },
                "showOperators": {
                    "description": "Show operator-suggestions.",
                    "type": "boolean"
                },
                "showProperties": {
                    "description": "Show property-suggestions.",
                    "type": "boolean"
                },
                "showReferences": {
                    "description": "Show reference-suggestions.",
                    "type": "boolean"
                },
                "showSnippets": {
                    "description": "Show snippet-suggestions.",
                    "type": "boolean"
                },
                "showStatusBar": {
                    "description": "Enable or disable the suggest status bar.",
                    "type": "boolean"
                },
                "showStructs": {
                    "description": "Show struct-suggestions.",
                    "type": "boolean"
                },
                "showTypeParameters": {
                    "description": "Show typeParameter-suggestions.",
                    "type": "boolean"
                },
                "showUnits": {
                    "description": "Show unit-suggestions.",
                    "type": "boolean"
                },
                "showUsers": {
                    "description": "Show user-suggestions.",
                    "type": "boolean"
                },
                "showValues": {
                    "description": "Show value-suggestions.",
                    "type": "boolean"
                },
                "showVariables": {
                    "description": "Show variable-suggestions.",
                    "type": "boolean"
                },
                "showWords": {
                    "description": "Show text-suggestions.",
                    "type": "boolean"
                },
                "snippetsPreventQuickSuggestions": {
                    "description": "Prevent quick suggestions when a snippet is active. Defaults to true.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "monaco.editor.ITextModel": {
            "description": "A model.",
            "properties": {
                "id": {
                    "description": "A unique identifier associated with this model.",
                    "type": "string"
                },
                "uri": {
                    "$ref": "#/definitions/monaco.Uri",
                    "description": "Gets the resource associated with this editor model."
                }
            },
            "type": "object"
        }
    },
    "description": "The options to create an editor.",
    "properties": {
        "acceptSuggestionOnCommitCharacter": {
            "description": "Accept suggestions on provider defined characters.\nDefaults to true.",
            "type": "boolean"
        },
        "acceptSuggestionOnEnter": {
            "description": "Accept suggestions on ENTER.\nDefaults to 'on'.",
            "enum": [
                "off",
                "on",
                "smart"
            ],
            "type": "string"
        },
        "accessibilityHelpUrl": {
            "description": "An URL to open when Ctrl+H (Windows and Linux) or Cmd+H (OSX) is pressed in\nthe accessibility help dialog in the editor.\n\nDefaults to \"https://go.microsoft.com/fwlink/?linkid=852450\"",
            "type": "string"
        },
        "accessibilityPageSize": {
            "description": "Controls the number of lines in the editor that can be read out by a screen reader",
            "type": "number"
        },
        "accessibilitySupport": {
            "description": "Configure the editor's accessibility support.\nDefaults to 'auto'. It is best to leave this to 'auto'.",
            "enum": [
                "auto",
                "off",
                "on"
            ],
            "type": "string"
        },
        "ariaLabel": {
            "description": "The aria label for the editor's textarea (when it is focused).",
            "type": "string"
        },
        "autoClosingBrackets": {
            "$ref": "#/definitions/monaco.editor.EditorAutoClosingStrategy",
            "description": "Options for auto closing brackets.\nDefaults to language defined behavior."
        },
        "autoClosingOvertype": {
            "$ref": "#/definitions/monaco.editor.EditorAutoClosingOvertypeStrategy",
            "description": "Options for typing over closing quotes or brackets."
        },
        "autoClosingQuotes": {
            "$ref": "#/definitions/monaco.editor.EditorAutoClosingStrategy",
            "description": "Options for auto closing quotes.\nDefaults to language defined behavior."
        },
        "autoIndent": {
            "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\nDefaults to advanced.",
            "enum": [
                "advanced",
                "brackets",
                "full",
                "keep",
                "none"
            ],
            "type": "string"
        },
        "autoSurround": {
            "$ref": "#/definitions/monaco.editor.EditorAutoSurroundStrategy",
            "description": "Options for auto surrounding.\nDefaults to always allowing auto surrounding."
        },
        "automaticLayout": {
            "description": "Enable that the editor will install an interval to check if its container dom node size has changed.\nEnabling this might have a severe performance impact.\nDefaults to false.",
            "type": "boolean"
        },
        "codeActionsOnSaveTimeout": {
            "description": "Timeout for running code actions on save.",
            "type": "number"
        },
        "codeLens": {
            "description": "Show code lens\nDefaults to true.",
            "type": "boolean"
        },
        "codeLensFontFamily": {
            "description": "Code lens font family. Defaults to editor font family.",
            "type": "string"
        },
        "codeLensFontSize": {
            "description": "Code lens font size. Default to 90% of the editor font size",
            "type": "number"
        },
        "colorDecorators": {
            "description": "Enable inline color decorators and color picker rendering.",
            "type": "boolean"
        },
        "columnSelection": {
            "description": "Enable that the selection with the mouse and keys is doing column selection.\nDefaults to false.",
            "type": "boolean"
        },
        "comments": {
            "$ref": "#/definitions/monaco.editor.IEditorCommentsOptions",
            "description": "Control the behaviour of comments in the editor."
        },
        "contextmenu": {
            "description": "Enable custom contextmenu.\nDefaults to true.",
            "type": "boolean"
        },
        "copyWithSyntaxHighlighting": {
            "description": "Syntax highlighting is copied.",
            "type": "boolean"
        },
        "cursorBlinking": {
            "description": "Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\nDefaults to 'blink'.",
            "enum": [
                "blink",
                "expand",
                "phase",
                "smooth",
                "solid"
            ],
            "type": "string"
        },
        "cursorSmoothCaretAnimation": {
            "description": "Enable smooth caret animation.\nDefaults to false.",
            "type": "boolean"
        },
        "cursorStyle": {
            "description": "Control the cursor style, either 'block' or 'line'.\nDefaults to 'line'.",
            "enum": [
                "block",
                "block-outline",
                "line",
                "line-thin",
                "underline",
                "underline-thin"
            ],
            "type": "string"
        },
        "cursorSurroundingLines": {
            "description": "Controls the minimal number of visible leading and trailing lines surrounding the cursor.\nDefaults to 0.",
            "type": "number"
        },
        "cursorSurroundingLinesStyle": {
            "description": "Controls when `cursorSurroundingLines` should be enforced\nDefaults to `default`, `cursorSurroundingLines` is not enforced when cursor position is changed\nby mouse.",
            "enum": [
                "all",
                "default"
            ],
            "type": "string"
        },
        "cursorWidth": {
            "description": "Control the width of the cursor when cursorStyle is set to 'line'",
            "type": "number"
        },
        "definitionLinkOpensInPeek": {
            "description": "Controls whether the definition link opens element in the peek widget.\nDefaults to false.",
            "type": "boolean"
        },
        "detectIndentation": {
            "description": "Controls whether `tabSize` and `insertSpaces` will be automatically detected when a file is opened based on the file contents.\nDefaults to true.",
            "type": "boolean"
        },
        "dimension": {
            "$ref": "#/definitions/monaco.editor.IDimension",
            "description": "The initial editor dimension (to avoid measuring the container)."
        },
        "disableLayerHinting": {
            "description": "Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers.\nThe usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.\nDefaults to false.",
            "type": "boolean"
        },
        "disableMonospaceOptimizations": {
            "description": "Disable the optimizations for monospace fonts.\nDefaults to false.",
            "type": "boolean"
        },
        "dragAndDrop": {
            "description": "Controls if the editor should allow to move selections via drag and drop.\nDefaults to false.",
            "type": "boolean"
        },
        "emptySelectionClipboard": {
            "description": "Copying without a selection copies the current line.",
            "type": "boolean"
        },
        "extraEditorClassName": {
            "description": "Class name to be added to the editor.",
            "type": "string"
        },
        "fastScrollSensitivity": {
            "description": "FastScrolling mulitplier speed when pressing `Alt`\nDefaults to 5.",
            "type": "number"
        },
        "find": {
            "$ref": "#/definitions/monaco.editor.IEditorFindOptions",
            "description": "Control the behavior of the find widget."
        },
        "fixedOverflowWidgets": {
            "description": "Display overflow widgets as `fixed`.\nDefaults to `false`.",
            "type": "boolean"
        },
        "folding": {
            "description": "Enable code folding.\nDefaults to true.",
            "type": "boolean"
        },
        "foldingHighlight": {
            "description": "Enable highlight for folded regions.\nDefaults to true.",
            "type": "boolean"
        },
        "foldingStrategy": {
            "description": "Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\nDefaults to 'auto'.",
            "enum": [
                "auto",
                "indentation"
            ],
            "type": "string"
        },
        "fontFamily": {
            "description": "The font family",
            "type": "string"
        },
        "fontLigatures": {
            "description": "Enable font ligatures.\nDefaults to false.",
            "type": [
                "string",
                "boolean"
            ]
        },
        "fontSize": {
            "description": "The font size",
            "type": "number"
        },
        "fontWeight": {
            "description": "The font weight",
            "type": "string"
        },
        "formatOnPaste": {
            "description": "Enable format on paste.\nDefaults to false.",
            "type": "boolean"
        },
        "formatOnType": {
            "description": "Enable format on type.\nDefaults to false.",
            "type": "boolean"
        },
        "glyphMargin": {
            "description": "Enable the rendering of the glyph margin.\nDefaults to true in vscode and to false in monaco-editor.",
            "type": "boolean"
        },
        "gotoLocation": {
            "$ref": "#/definitions/monaco.editor.IGotoLocationOptions"
        },
        "hideCursorInOverviewRuler": {
            "description": "Should the cursor be hidden in the overview ruler.\nDefaults to false.",
            "type": "boolean"
        },
        "highlightActiveIndentGuide": {
            "description": "Enable highlighting of the active indent guide.\nDefaults to true.",
            "type": "boolean"
        },
        "hover": {
            "$ref": "#/definitions/monaco.editor.IEditorHoverOptions",
            "description": "Configure the editor's hover."
        },
        "inDiffEditor": {
            "description": "This editor is used inside a diff editor.",
            "type": "boolean"
        },
        "inlineHints": {
            "$ref": "#/definitions/monaco.editor.IEditorInlineHintsOptions",
            "description": "Control the behavior and rendering of the inline hints."
        },
        "insertSpaces": {
            "description": "Insert spaces when pressing `Tab`.\nThis setting is overridden based on the file contents when `detectIndentation` is on.\nDefaults to true.",
            "type": "boolean"
        },
        "language": {
            "description": "The initial language of the auto created model in the editor.\nTo not create automatically a model, use `model: null`.",
            "type": "string"
        },
        "largeFileOptimizations": {
            "description": "Special handling for large files to disable certain memory intensive features.\nDefaults to true.",
            "type": "boolean"
        },
        "letterSpacing": {
            "description": "The letter spacing",
            "type": "number"
        },
        "lightbulb": {
            "$ref": "#/definitions/monaco.editor.IEditorLightbulbOptions",
            "description": "Control the behavior and rendering of the code action lightbulb."
        },
        "lineDecorationsWidth": {
            "description": "The width reserved for line decorations (in px).\nLine decorations are placed between line numbers and the editor content.\nYou can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\nDefaults to 10.",
            "type": [
                "string",
                "number"
            ]
        },
        "lineHeight": {
            "description": "The line height",
            "type": "number"
        },
        "lineNumbers": {
            "anyOf": [
                {
                    "enum": [
                        "interval",
                        "off",
                        "on",
                        "relative"
                    ],
                    "type": "string"
                },
                {
                    "type": "object"
                }
            ],
            "description": "Control the rendering of line numbers.\nIf it is a function, it will be invoked when rendering a line number and the return value will be rendered.\nOtherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\nOtherwise, line numbers will not be rendered.\nDefaults to `on`."
        },
        "lineNumbersMinChars": {
            "description": "Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\nDefaults to 5.",
            "type": "number"
        },
        "linkedEditing": {
            "description": "Enable linked editing.\nDefaults to false.",
            "type": "boolean"
        },
        "links": {
            "description": "Enable detecting links and making them clickable.\nDefaults to true.",
            "type": "boolean"
        },
        "matchBrackets": {
            "description": "Enable highlighting of matching brackets.\nDefaults to 'always'.",
            "enum": [
                "always",
                "near",
                "never"
            ],
            "type": "string"
        },
        "maxTokenizationLineLength": {
            "description": "Lines above this length will not be tokenized for performance reasons.\nDefaults to 20000.",
            "type": "number"
        },
        "minimap": {
            "$ref": "#/definitions/monaco.editor.IEditorMinimapOptions",
            "description": "Control the behavior and rendering of the minimap."
        },
        "model": {
            "$ref": "#/definitions/monaco.editor.ITextModel",
            "description": "The initial model associated with this code editor."
        },
        "mouseStyle": {
            "description": "Control the mouse pointer style, either 'text' or 'default' or 'copy'\nDefaults to 'text'",
            "enum": [
                "copy",
                "default",
                "text"
            ],
            "type": "string"
        },
        "mouseWheelScrollSensitivity": {
            "description": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\nDefaults to 1.",
            "type": "number"
        },
        "mouseWheelZoom": {
            "description": "Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\nDefaults to false.",
            "type": "boolean"
        },
        "multiCursorMergeOverlapping": {
            "description": "Merge overlapping selections.\nDefaults to true",
            "type": "boolean"
        },
        "multiCursorModifier": {
            "description": "The modifier to be used to add multiple cursors with the mouse.\nDefaults to 'alt'",
            "enum": [
                "alt",
                "ctrlCmd"
            ],
            "type": "string"
        },
        "multiCursorPaste": {
            "description": "Configure the behaviour when pasting a text with the line count equal to the cursor count.\nDefaults to 'spread'.",
            "enum": [
                "full",
                "spread"
            ],
            "type": "string"
        },
        "occurrencesHighlight": {
            "description": "Enable semantic occurrences highlight.\nDefaults to true.",
            "type": "boolean"
        },
        "overflowWidgetsDomNode": {
            "$ref": "#/definitions/HTMLElement",
            "description": "Place overflow widgets inside an external DOM node.\nDefaults to an internal DOM node."
        },
        "overviewRulerBorder": {
            "description": "Controls if a border should be drawn around the overview ruler.\nDefaults to `true`.",
            "type": "boolean"
        },
        "overviewRulerLanes": {
            "description": "The number of vertical lanes the overview ruler should render.\nDefaults to 3.",
            "type": "number"
        },
        "padding": {
            "$ref": "#/definitions/monaco.editor.IEditorPaddingOptions",
            "description": "Controls the spacing around the editor."
        },
        "parameterHints": {
            "$ref": "#/definitions/monaco.editor.IEditorParameterHintOptions",
            "description": "Parameter hint options."
        },
        "peekWidgetDefaultFocus": {
            "description": "Controls whether to focus the inline editor in the peek widget by default.\nDefaults to false.",
            "enum": [
                "editor",
                "tree"
            ],
            "type": "string"
        },
        "quickSuggestions": {
            "anyOf": [
                {
                    "$ref": "#/definitions/monaco.editor.IQuickSuggestionsOptions"
                },
                {
                    "type": "boolean"
                }
            ],
            "description": "Enable quick suggestions (shadow suggestions)\nDefaults to true."
        },
        "quickSuggestionsDelay": {
            "description": "Quick suggestions show delay (in ms)\nDefaults to 10 (ms)",
            "type": "number"
        },
        "readOnly": {
            "description": "Should the editor be read only.\nDefaults to false.",
            "type": "boolean"
        },
        "renameOnType": {
            "description": "deprecated, use linkedEditing instead",
            "type": "boolean"
        },
        "renderControlCharacters": {
            "description": "Enable rendering of control characters.\nDefaults to false.",
            "type": "boolean"
        },
        "renderFinalNewline": {
            "description": "Render last line number when the file ends with a newline.\nDefaults to true.",
            "type": "boolean"
        },
        "renderIndentGuides": {
            "description": "Enable rendering of indent guides.\nDefaults to true.",
            "type": "boolean"
        },
        "renderLineHighlight": {
            "description": "Enable rendering of current line highlight.\nDefaults to all.",
            "enum": [
                "all",
                "gutter",
                "line",
                "none"
            ],
            "type": "string"
        },
        "renderLineHighlightOnlyWhenFocus": {
            "description": "Control if the current line highlight should be rendered only the editor is focused.\nDefaults to false.",
            "type": "boolean"
        },
        "renderValidationDecorations": {
            "description": "Should the editor render validation decorations.\nDefaults to editable.",
            "enum": [
                "editable",
                "off",
                "on"
            ],
            "type": "string"
        },
        "renderWhitespace": {
            "description": "Enable rendering of whitespace.\nDefaults to none.",
            "enum": [
                "all",
                "boundary",
                "none",
                "selection",
                "trailing"
            ],
            "type": "string"
        },
        "revealHorizontalRightPadding": {
            "description": "When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\nThis virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\nDefaults to 30 (px).",
            "type": "number"
        },
        "roundedSelection": {
            "description": "Render the editor selection with rounded borders.\nDefaults to true.",
            "type": "boolean"
        },
        "rulers": {
            "description": "Render vertical lines at the specified columns.\nDefaults to empty array.",
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/monaco.editor.IRulerOption"
                    },
                    {
                        "type": "number"
                    }
                ]
            },
            "type": "array"
        },
        "scrollBeyondLastColumn": {
            "description": "Enable that scrolling can go beyond the last column by a number of columns.\nDefaults to 5.",
            "type": "number"
        },
        "scrollBeyondLastLine": {
            "description": "Enable that scrolling can go one screen size after the last line.\nDefaults to true.",
            "type": "boolean"
        },
        "scrollPredominantAxis": {
            "description": "Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad.\nDefaults to true.",
            "type": "boolean"
        },
        "scrollbar": {
            "$ref": "#/definitions/monaco.editor.IEditorScrollbarOptions",
            "description": "Control the behavior and rendering of the scrollbars."
        },
        "selectOnLineNumbers": {
            "description": "Should the corresponding line be selected when clicking on the line number?\nDefaults to true.",
            "type": "boolean"
        },
        "selectionClipboard": {
            "description": "Enable Linux primary clipboard.\nDefaults to true.",
            "type": "boolean"
        },
        "selectionHighlight": {
            "description": "Enable selection highlight.\nDefaults to true.",
            "type": "boolean"
        },
        "semanticHighlighting.enabled": {
            "description": "Controls whether the semanticHighlighting is shown for the languages that support it.\ntrue: semanticHighlighting is enabled for all themes\nfalse: semanticHighlighting is disabled for all themes\n'configuredByTheme': semanticHighlighting is controlled by the current color theme's semanticHighlighting setting.\nDefaults to 'byTheme'.",
            "enum": [
                "configuredByTheme",
                false,
                true
            ]
        },
        "showDeprecated": {
            "description": "Controls strikethrough deprecated variables.",
            "type": "boolean"
        },
        "showFoldingControls": {
            "description": "Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\nDefaults to 'mouseover'.",
            "enum": [
                "always",
                "mouseover"
            ],
            "type": "string"
        },
        "showUnused": {
            "description": "Controls fading out of unused variables.",
            "type": "boolean"
        },
        "smartSelect": {
            "$ref": "#/definitions/monaco.editor.ISmartSelectOptions",
            "description": "Smart select opptions;"
        },
        "smoothScrolling": {
            "description": "Enable that the editor animates scrolling to a position.\nDefaults to false.",
            "type": "boolean"
        },
        "snippetSuggestions": {
            "description": "Enable snippet suggestions. Default to 'true'.",
            "enum": [
                "bottom",
                "inline",
                "none",
                "top"
            ],
            "type": "string"
        },
        "stablePeek": {
            "description": "Keep peek editors open even when double clicking their content or when hitting `Escape`.\nDefaults to false.",
            "type": "boolean"
        },
        "stickyTabStops": {
            "description": "Emulate selection behaviour of tab characters when using spaces for indentation.\nThis means selection will stick to tab stops.",
            "type": "boolean"
        },
        "stopRenderingLineAfter": {
            "description": "Performance guard: Stop rendering a line after x characters.\nDefaults to 10000.\nUse -1 to never stop rendering",
            "type": "number"
        },
        "suggest": {
            "$ref": "#/definitions/monaco.editor.ISuggestOptions",
            "description": "Suggest options."
        },
        "suggestFontSize": {
            "description": "The font size for the suggest widget.\nDefaults to the editor font size.",
            "type": "number"
        },
        "suggestLineHeight": {
            "description": "The line height for the suggest widget.\nDefaults to the editor line height.",
            "type": "number"
        },
        "suggestOnTriggerCharacters": {
            "description": "Enable the suggestion box to pop-up on trigger characters.\nDefaults to true.",
            "type": "boolean"
        },
        "suggestSelection": {
            "description": "The history mode for suggestions.",
            "enum": [
                "first",
                "recentlyUsed",
                "recentlyUsedByPrefix"
            ],
            "type": "string"
        },
        "tabCompletion": {
            "description": "Enable tab completion.",
            "enum": [
                "off",
                "on",
                "onlySnippets"
            ],
            "type": "string"
        },
        "tabIndex": {
            "description": "The `tabindex` property of the editor's textarea",
            "type": "number"
        },
        "tabSize": {
            "description": "The number of spaces a tab is equal to.\nThis setting is overridden based on the file contents when `detectIndentation` is on.\nDefaults to 4.",
            "type": "number"
        },
        "theme": {
            "description": "Initial theme to be used for rendering.\nThe current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black'.\nYou can create custom themes via `monaco.editor.defineTheme`.\nTo switch a theme, use `monaco.editor.setTheme`",
            "type": "string"
        },
        "trimAutoWhitespace": {
            "description": "Remove trailing auto inserted whitespace.\nDefaults to true.",
            "type": "boolean"
        },
        "unfoldOnClickAfterEndOfLine": {
            "description": "Controls whether clicking on the empty content after a folded line will unfold the line.\nDefaults to false.",
            "type": "boolean"
        },
        "unusualLineTerminators": {
            "description": "Remove unusual line terminators like LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\nDefaults to 'prompt'.",
            "enum": [
                "auto",
                "off",
                "prompt"
            ],
            "type": "string"
        },
        "useTabStops": {
            "description": "Inserting and deleting whitespace follows tab stops.",
            "type": "boolean"
        },
        "value": {
            "description": "The initial value of the auto created model in the editor.\nTo not create automatically a model, use `model: null`.",
            "type": "string"
        },
        "wordBasedSuggestions": {
            "description": "Controls whether completions should be computed based on words in the document.\nDefaults to true.",
            "type": "boolean"
        },
        "wordBasedSuggestionsOnlySameLanguage": {
            "description": "Controls whether word based completions should be included from opened documents of the same language or any language.",
            "type": "boolean"
        },
        "wordSeparators": {
            "description": "A string containing the word separators used when doing word navigation.\nDefaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?",
            "type": "string"
        },
        "wordWrap": {
            "description": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to \"off\".",
            "enum": [
                "bounded",
                "off",
                "on",
                "wordWrapColumn"
            ],
            "type": "string"
        },
        "wordWrapBreakAfterCharacters": {
            "description": "Configure word wrapping characters. A break will be introduced after these characters.\nDefaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'.",
            "type": "string"
        },
        "wordWrapBreakBeforeCharacters": {
            "description": "Configure word wrapping characters. A break will be introduced before these characters.\nDefaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'.",
            "type": "string"
        },
        "wordWrapColumn": {
            "description": "Control the wrapping of the editor.\nWhen `wordWrap` = \"off\", the lines will never wrap.\nWhen `wordWrap` = \"on\", the lines will wrap at the viewport width.\nWhen `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\nWhen `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\nDefaults to 80.",
            "type": "number"
        },
        "wordWrapOverride1": {
            "description": "Override the `wordWrap` setting.",
            "enum": [
                "inherit",
                "off",
                "on"
            ],
            "type": "string"
        },
        "wordWrapOverride2": {
            "description": "Override the `wordWrapOverride1` setting.",
            "enum": [
                "inherit",
                "off",
                "on"
            ],
            "type": "string"
        },
        "wrappingIndent": {
            "description": "Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\nDefaults to 'same' in vscode and to 'none' in monaco-editor.",
            "enum": [
                "deepIndent",
                "indent",
                "none",
                "same"
            ],
            "type": "string"
        },
        "wrappingStrategy": {
            "description": "Controls the wrapping strategy to use.\nDefaults to 'simple'.",
            "enum": [
                "advanced",
                "simple"
            ],
            "type": "string"
        }
    },
    "type": "object"
}

