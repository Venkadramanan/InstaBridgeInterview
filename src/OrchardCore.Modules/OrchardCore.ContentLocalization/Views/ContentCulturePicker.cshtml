@using Microsoft.AspNetCore.Localization
@using OrchardCore.Localization
@using System.Globalization

@inject ILocalizationService LocalizationService
@{
    var supportedCultures = (await LocalizationService.GetSupportedCulturesAsync()).Select(c => CultureInfo.GetCultureInfo(c));

    if (supportedCultures.Count() < 2)
    {
        return;
    }

    var currentCulture = Context.Request.HttpContext.Features
            .Get<IRequestCultureFeature>()?.RequestCulture?.Culture ?? CultureInfo.CurrentUICulture;
}

<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="oc-culture-picker" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@currentCulture.NativeName</a>
    <div class="dropdown-menu" aria-labelledby="oc-culture-picker">
        @foreach (var culture in supportedCultures)
        {
            if (culture.Name == currentCulture.Name)
            {
                continue;
            }

            <a asp-route="RedirectToLocalizedContent"
               asp-route-area="OrchardCore.ContentLocalization"
               asp-route-targetCulture="@culture.Name"
               asp-route-contentItemUrl="@Context.Request.Path.Value"
               asp-route-queryStringValue="@Context.Request.QueryString.Value"
               class="dropdown-item">@culture.NativeName</a>
        }
    </div>
</li>
